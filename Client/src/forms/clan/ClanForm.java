/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forms.clan;

import forms.zakazivanje.ZakazivanjeForm;
import communication.Communication;
import communication.Status;
import constants.ClientConstants;
import controller.Controller;
import domain.Clan;
import domain.Grupa;
import java.awt.Frame;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Kristina
 */
public class ClanForm extends javax.swing.JDialog {

    private int operacija;
    private Clan clan;
    private PretraziClanaForm pcf;

    /**
     * Creates new form ClanForma
     */
    public ClanForm(java.awt.Frame parent, boolean modal, int operacija, Clan clan, PretraziClanaForm pcf) throws Exception {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.clan = clan;
        this.operacija = operacija;
        this.pcf = pcf;
        popuniComboBox();
        popuniFormu(operacija);
        Controller.getInstance().setCf(this);
        //popuniComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtJMBG = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbGrupe = new javax.swing.JComboBox();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnZakazivanja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("id");

        jLabel2.setText("ime");

        jLabel3.setText("prezime");

        jLabel4.setText("JMBG");

        jLabel5.setText("grupa");

        cmbGrupe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvaj.setText("sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnZakazivanja.setText("pogledaj sva zakazivanje");
        btnZakazivanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZakazivanjaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId)
                            .addComponent(txtIme)
                            .addComponent(txtPrezime)
                            .addComponent(txtJMBG)
                            .addComponent(cmbGrupe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSacuvaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(btnZakazivanja)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbGrupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi)
                    .addComponent(btnZakazivanja))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        sacuvajClana();


    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        cmbGrupe.setEnabled(true);
        btnSacuvaj.setEnabled(true);
        txtId.setEnabled(false);
        txtIme.setEnabled(true);
        txtPrezime.setEnabled(true);
        txtJMBG.setEnabled(true);
        btnIzmeni.setEnabled(false);

    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            int odgovor = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete clna?", "BRISANJE CLANA", JOptionPane.YES_NO_OPTION);
            if (odgovor == JOptionPane.YES_OPTION) {
                Communication.getInstance().deleteClan(clan);
                JOptionPane.showMessageDialog(this, "Uspesno obrisan clan");
                pcf.osveziFormu(clan.getIme());
                clan = null;
                this.dispose();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnZakazivanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZakazivanjaActionPerformed
        // TODO add your handling code here:

        new ZakazivanjeForm((Frame) this.getParent(), true).setVisible(true);

    }//GEN-LAST:event_btnZakazivanjaActionPerformed

    /**
     * @param args the command line arguments
     */
    public void popuniFormu(int operacija) {
        switch (operacija) {
            case ClientConstants.KREIRAJ:
                txtId.setEnabled(false);
                btnSacuvaj.setEnabled(true);
                btnIzmeni.setEnabled(false);
                btnObrisi.setEnabled(false);
                btnZakazivanja.setEnabled(false);
                break;
            case ClientConstants.IZMENI:
                JOptionPane.showMessageDialog(this, "Uspeno ucitan clan!");
                txtId.setText(clan.getId() + "");
                txtIme.setText(clan.getIme());
                txtPrezime.setText(clan.getPrezime());
                txtJMBG.setText(clan.getJMBG());
                cmbGrupe.setSelectedItem(clan.getGrupa());
                //System.out.println(clan.getGrupa());
                //if(clan.getGrupa()==null || clan.getGrupa().getNaziv()==null){
                //  System.out.println("usao u if??");
                //cmbGrupe.setSelectedIndex(-1);
                //}else{
                
                //  System.out.println("usao u else");
                //}

                txtId.setEnabled(false);
                txtIme.setEnabled(false);
                txtPrezime.setEnabled(false);
                txtJMBG.setEnabled(false);
                btnSacuvaj.setEnabled(false);
                btnIzmeni.setEnabled(true);
                btnObrisi.setEnabled(true);
                cmbGrupe.setEnabled(false);
                break;
            default:
                throw new AssertionError();
        }
    }

    private void popuniComboBox() throws Exception {

        List<Grupa> grupe = Communication.getInstance().vratiGrupe();
        cmbGrupe.removeAllItems();
        for (Grupa grupa : grupe) {
            cmbGrupe.addItem(grupa);
        }
        cmbGrupe.setSelectedIndex(-1);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnZakazivanja;
    private javax.swing.JComboBox cmbGrupe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtJMBG;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private boolean validateJMBG(String jmbg) {
        for (int i = 0; i < jmbg.length(); i++) {
            if (!Character.isDigit(jmbg.charAt(i))) {
                JOptionPane.showMessageDialog(this, "JMBG se mora sastojati samo od cifara!","", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private boolean validateForm(String ime, String prezime, String jmbg, Grupa grupa) {
        if (ime.isEmpty() || prezime.isEmpty() || jmbg.isEmpty() || grupa == null) {
            JOptionPane.showMessageDialog(this, "Sva polja moraju da budu popunjena!","", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private void sacuvajClana() {
        switch (operacija) {
            case ClientConstants.IZMENI:
            try {
                Long id = Long.valueOf(txtId.getText());
                String ime = txtIme.getText().trim();
                String prezime = txtPrezime.getText().trim();
                String jmbg = txtJMBG.getText().trim();
                Grupa grupa = (Grupa) cmbGrupe.getSelectedItem();
                if (validateForm(ime, prezime, jmbg, grupa) && validateJMBG(jmbg)) {
                    if (jmbg.length() == 13) {
                        Clan clan = new Clan(id, ime, prezime, jmbg, grupa);
                        Status status = Communication.getInstance().updateClana(clan);
                        if (status == Status.SUCCESS) {
                            JOptionPane.showMessageDialog(this, "Clan je uspesno sacuvan!");
                            Controller.getInstance().setClan(clan);
                            pcf.osveziFormu(Controller.getInstance().getImeClana());
                            cmbGrupe.setEnabled(false);
                            txtIme.setEnabled(false);
                            txtPrezime.setEnabled(false);
                            txtJMBG.setEnabled(false);
                            btnIzmeni.setEnabled(true);
                            btnSacuvaj.setEnabled(false);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "JMBG mora imati tacno 13 cifara!","", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
            break;
            case ClientConstants.KREIRAJ:
                 try {
                String ime = txtIme.getText().trim();
                String prezime = txtPrezime.getText().trim();
                String jmbg = txtJMBG.getText().trim();
                Grupa grupa = (Grupa) cmbGrupe.getSelectedItem();
                if (validateForm(ime, prezime, jmbg, grupa)&& validateJMBG(jmbg)) {
                    if (jmbg.length() == 13) {
                        Clan clan = new Clan(-1l, ime, prezime, jmbg, grupa);
                        Communication.getInstance().kreirajClana(clan);
                        JOptionPane.showMessageDialog(this, "Clan je uspesno sacuvan!");
                        int odgovor = JOptionPane.showConfirmDialog(this, "Da li zelite da uneste jos nekog clana?",
                                "UNOS CLANA", JOptionPane.YES_NO_OPTION);
                        if (odgovor == JOptionPane.YES_OPTION) {
                            txtIme.setText("");
                            txtJMBG.setText("");
                            txtPrezime.setText("");
                            cmbGrupe.setSelectedIndex(-1);
                        } else {
                            this.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "JMBG mora imati tacno 13 cifara!","", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
            }

            break;
            default:
                throw new AssertionError();
        }
    }
}
